<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<!-- 不使用namespace的话sql搜索定位会比较方便 -->
<mapper namespace="com.mf.sys.dao.SysRoleDao">

	<resultMap id="SysRole" type="com.mf.sys.entity.SysRole">
        <result property="rlid" column="RLID"/>
        <result property="rlnm" column="RLNM"/>
        <result property="rlright" column="RLRIGHT"/>
        <result property="remark" column="REMARK"/>
        <result property="rllvl" column="RLLVL"/>
	</resultMap>
	
	<sql id="selectId">
		RLID,RLNM,RLRIGHT,REMARK,RLLVL
    </sql>
    
    <select id="findAll" resultType="com.mf.sys.entity.SysRole">
		select
		<include refid="selectId" />
		from sys_role
	</select>
	
	<select id="queryAll" resultType="com.mf.sys.entity.SysRole" parameterType="com.mf.sys.entity.SysRole">
		select
		<include refid="selectId" />
		from sys_role
		<include refid="querywhere1"/>
		<if test="@Ognl@isNotEmpty(sort) and @Ognl@isNotEmpty(direction)">
		 order by ${sort} ${direction}
		</if>
	</select>

	<select id="query" resultType="com.mf.sys.entity.SysRole">
		select
		<include refid="selectId" />
		from sys_role
		<include refid="querywhere"/>
		<if test="@Ognl@isNotEmpty(t.sort) and @Ognl@isNotEmpty(t.direction)">
		 order by ${t.sort} ${t.direction}
		</if>
	</select>
	
	<sql id="querywhere">
		<!-- ognl访问静态方法的表达式 为@class@method(args),以下为调用Ognl.isNotEmpty()方法,还有其它方法如isNotBlank()可以使用，具体请查看Ognl类 -->
		<where>	      				
			   <if test="@Ognl@isNotEmpty(t.rlnm)">
					AND RLNM like '%${t.rlnm}%'
			   </if>
			   <if test="@Ognl@isNotEmpty(t.rlright)">
					AND RLRIGHT like '%${t.rlright}%'
			   </if>
			   <if test="@Ognl@isNotEmpty(t.remark)">
					AND REMARK like '%${t.remark}%'
			   </if>
			   <if test="@Ognl@isNotEmpty(t.rllvl)">
					AND RLLVL like '%${t.rllvl}%'
			   </if>
	       
		</where>
	</sql>
	
		<sql id="querywhere1">
		<!-- ognl访问静态方法的表达式 为@class@method(args),以下为调用Ognl.isNotEmpty()方法,还有其它方法如isNotBlank()可以使用，具体请查看Ognl类 -->
		<where>	      				
		       <if test="@Ognl@isNotEmpty(rlnm)">
					AND RLNM like '%${rlnm}%'
				</if>
		       <if test="@Ognl@isNotEmpty(rlright)">
					AND RLRIGHT like '%${rlright}%'
				</if>
		       <if test="@Ognl@isNotEmpty(remark)">
					AND REMARK like '%${remark}%'
				</if>
		       <if test="@Ognl@isNotEmpty(rllvl)">
					AND RLLVL like '%${rllvl}%'
				</if>
	       
		</where>
	</sql>

	<select id="countOp" parameterType="String" resultType="int">
		select count(0) from operator where RLID=#{rlid}
	</select>

	<!-- 总记录数 -->
	<select id="count" parameterType="com.mf.sys.entity.SysRole" resultType="int">
		select count(0) from sys_role
		<include refid="querywhere1"/>
	</select>
	
	<!-- 新增 -->
	<insert id="addAll" parameterType="com.mf.sys.entity.SysRole">
		INSERT INTO sys_role (
			RLID ,
        	RLNM ,
        	RLRIGHT ,
        	REMARK ,
        	RLLVL 
        ) VALUES (
        	#{rlid} ,
        	#{rlnm} ,
        	#{rlright} ,
        	#{remark} ,
        	#{rllvl} 
        )
	</insert>
	
	<!-- 新增Selective -->
	<insert id="add" parameterType="com.mf.sys.entity.SysRole">
	<selectKey resultType="java.lang.Integer"  order="AFTER" keyProperty="id" >
	        SELECT LAST_INSERT_ID() AS ID
	</selectKey>
		INSERT INTO sys_role 
		<include refid="addtrim"/>
	</insert>
	
	<sql id="addtrim">
	<trim prefix="(" suffix=")" suffixOverrides="," >
			<if test="@Ognl@isNotEmpty(rlnm)">
				RLNM,
			</if>
			<if test="@Ognl@isNotEmpty(rlright)">
				RLRIGHT,
			</if>
			<if test="@Ognl@isNotEmpty(remark)">
				REMARK,
			</if>
			<if test="@Ognl@isNotEmpty(rllvl)">
				RLLVL,
			</if>
    </trim>
    <trim prefix=" values (" suffix=")" suffixOverrides="," >
			<if test="@Ognl@isNotEmpty(rlnm)">
				#{rlnm},
			</if>
			<if test="@Ognl@isNotEmpty(rlright)">
				#{rlright},
			</if>
			<if test="@Ognl@isNotEmpty(remark)">
				#{remark},
			</if>
			<if test="@Ognl@isNotEmpty(rllvl)">
				#{rllvl},
			</if>
    </trim>
	</sql>
	
	<!-- 删 -->
	<delete id="delete" parameterType="String">
		DELETE FROM sys_role WHERE
        RLID = #{id} 
	</delete>
	
	<!-- 根据主键查实体 -->
	<select id="getById" parameterType="String" resultType="com.mf.sys.entity.SysRole">
		SELECT <include refid="selectId" />
		    FROM sys_role 
	        WHERE 
        RLID = #{id} 
	</select>
	
	<select id="getByLvl" parameterType="String" resultType="com.mf.sys.entity.SysRole">
		SELECT <include refid="selectId" />
		    FROM sys_role 
	        WHERE 
        RLLVL = #{lvl}
	</select>
	
	<!-- 更新all -->
	<update id="updateAll" parameterType="com.mf.sys.entity.SysRole">
	    UPDATE sys_role SET
	        RLNM = #{rlnm} ,
	        RLRIGHT = #{rlright} ,
	        REMARK = #{remark} ,
	        RLLVL = #{rllvl} 
        WHERE 
	        RLID = #{rlid} 
	</update>
	
	<sql id="updateset">
	<set>
		<if test="@Ognl@isNotEmpty(rlnm)">
			RLNM = #{rlnm},
		</if>
		<if test="@Ognl@isNotEmpty(rlright)">
			RLRIGHT = #{rlright},
		</if>
		<if test="@Ognl@isNotEmpty(remark)">
			REMARK = #{remark},
		</if>
		<if test="@Ognl@isNotEmpty(rllvl)">
			RLLVL = #{rllvl},
		</if>
    </set>
	</sql>
	
	<!-- 更新Selective -->
	<update id="modify" parameterType="com.mf.sys.entity.SysRole">
	    UPDATE sys_role 
		<include refid="updateset"/>
        WHERE 
	        RLID = #{rlid} 
	</update>
	
	<select id="calcNewRoleId" parameterType="String" resultType="String">
	select max(substr(RLID,2,2))+1 
	from sys_role
	where substr(RLID,2,2)!='99' and ( SUBSTR(RLID,1,1)=#{rllvl} or  rllvl=#{rllvl} )
	</select>
	<!-- 查找唯一索引但不是主键的字段Selective -->
	
</mapper>

