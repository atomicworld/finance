<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<!-- 不使用namespace的话sql搜索定位会比较方便 -->
<mapper namespace="com.mf.sms.dao.MessageModelDao">

	<resultMap id="MessageModel" type="com.mf.sms.entity.MessageModel">
        <result property="id" column="ID"/>
        <result property="typeid" column="TYPEID"/>
        <result property="typenm" column="TYPENM"/>
        <result property="content" column="CONTENT"/>
        <result property="isused" column="ISUSED"/>
	</resultMap>
	
	<sql id="selectId">
		ID,TYPEID,TYPENM,CONTENT,ISUSED
    </sql>
    
    <select id="findAll" resultType="com.mf.sms.entity.MessageModel">
		select
		<include refid="selectId" />
		from message_model
	</select>
	
	<select id="queryAll" resultType="com.mf.sms.entity.MessageModel" parameterType="com.mf.sms.entity.MessageModel">
		select
		<include refid="selectId" />
		from message_model
		<include refid="querywhere1"/>
		<if test="@Ognl@isNotEmpty(sort) and @Ognl@isNotEmpty(direction)">
		 order by ${sort} ${direction}
		</if>
	</select>

	<select id="query" resultType="com.mf.sms.entity.MessageModel">
		select
		<include refid="selectId" />
		from message_model
		<include refid="querywhere"/>
		<if test="@Ognl@isNotEmpty(t.sort) and @Ognl@isNotEmpty(t.direction)">
		 order by ${t.sort} ${t.direction}
		</if>
	</select>
	
	<sql id="querywhere">
		<!-- ognl访问静态方法的表达式 为@class@method(args),以下为调用Ognl.isNotEmpty()方法,还有其它方法如isNotBlank()可以使用，具体请查看Ognl类 -->
		<where>      				
			   <if test="@Ognl@isNotEmpty(t.typeid)">
					AND TYPEID like '%${t.typeid}%'
			   </if>
			   <if test="@Ognl@isNotEmpty(t.typenm)">
					AND TYPENM like '%${t.typenm}%'
			   </if>
			   <if test="@Ognl@isNotEmpty(t.content)">
					AND CONTENT like '%${t.content}%'
			   </if>
				<if test="@Ognl@isNotEmpty(t.isused)">
					AND ISUSED like '%${t.isused}%'
			   </if>	       
	       
		</where>
	</sql>
	
		<sql id="querywhere1">
		<!-- ognl访问静态方法的表达式 为@class@method(args),以下为调用Ognl.isNotEmpty()方法,还有其它方法如isNotBlank()可以使用，具体请查看Ognl类 -->
		<where>	      				
		       <if test="@Ognl@isNotEmpty(typeid)">
					AND TYPEID like '%${typeid}%'
				</if>
		       <if test="@Ognl@isNotEmpty(typenm)">
					AND TYPENM like '%${typenm}%'
				</if>
		       <if test="@Ognl@isNotEmpty(content)">
					AND CONTENT like '%${content}%'
				</if>
				<if test="@Ognl@isNotEmpty(isused)">
					AND ISUSED like '%${isused}%'
				</if>
	       
		</where>
	</sql>

	<!-- 总记录数 -->
	<select id="count" parameterType="com.mf.sms.entity.MessageModel" resultType="int">
		select count(0) from message_model
		<include refid="querywhere1"/>
	</select>
	
	<!-- 新增Selective -->
	<insert id="add" parameterType="com.mf.sms.entity.MessageModel">
		INSERT INTO message_model 
		(id,typeid,typenm,content,isused) VALUES
		(#{id} ,#{typeid} ,#{typenm} ,#{content} ,#{isused})
	</insert>
	
	<!-- 删 -->
	<delete id="delete" parameterType="String">
		DELETE FROM message_model WHERE
        ID = #{id} 
	</delete>
	
	<!-- 根据主键查实体 -->
	<select id="getById" parameterType="String" resultType="com.mf.sms.entity.MessageModel">
		SELECT * FROM message_model 
	        WHERE 
        ID = #{id} 
	</select>
	
	<!-- 更新Selective -->
	<update id="update" parameterType="com.mf.sms.entity.MessageModel" >
	    UPDATE message_model SET
			TYPEID = #{typeid} ,
	        TYPENM = #{typenm} ,
	        CONTENT = #{content} ,
	        ISUSED = #{isused}
        WHERE 
	        ID = #{id} 
	</update>
	
	<update id="changeStatus" parameterType="com.mf.sms.entity.MessageModel">
		update message_model
		<set>
		     isused=#{isused}
		</set>
		WHERE 
	        ID = #{id}
	</update>
	
	<!-- 查找唯一索引但不是主键的字段Selective -->
	
</mapper>

